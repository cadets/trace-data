Objavro.codecnullavro.schema¿÷{"doc": "* A record representing either a vertex or an edge. This is the top level record that allows\n     * us to easily mix the vertices and edges defined above on the wire.", "type": "record", "namespace": "com.bbn.tc.schema.avro", "fields": [{"type": [{"doc": "* A principal is a local user\n     * TODO: extend to include remote principals\n     * TODO: what happens when the user information changes (are we tracking versions?)\n     * TODO: Authentication mechanisms: are TA1s providing that information and how?", "type": "record", "namespace": "com.bbn.tc.schema.avro", "fields": [{"type": {"type": "fixed", "namespace": "com.bbn.tc.schema.avro", "name": "UUID", "size": 16}, "doc": "A unique id for the principal", "name": "uuid"}, {"default": "PRINCIPAL_LOCAL", "type": {"namespace": "com.bbn.tc.schema.avro", "type": "enum", "doc": "* PrincipalType identifies the type of user: either local to the\n     * host, or remote users/systems.", "symbols": ["PRINCIPAL_LOCAL", "PRINCIPAL_REMOTE"], "name": "PrincipalType"}, "doc": "The type of the principal, local by default", "name": "type"}, {"type": "string", "doc": "The operating system identifier associated with the user", "name": "userId"}, {"default": null, "type": ["null", "string"], "doc": "Human-readable string identifier, such as username (Optional)", "name": "username"}, {"type": {"items": "string", "type": "array"}, "doc": "The ids of the groups which this user is part of", "name": "groupIds"}, {"default": null, "type": ["null", {"type": "map", "values": "string"}], "doc": "* Arbitrary key, value pairs describing the entity.\n         * NOTE: This attribute is meant as a temporary place holder for items that\n         * will become first-class attributes in the next CDM version.", "name": "properties"}], "name": "Principal"}, {"doc": "* A provenance tag defines source dependence on specific data sources (inputs).\n     * A tag identifier is typically bound to a source and used by the tracking system to\n     * capture dependence on this source input.\n     *\n     * ProvenanceTagNode defines one step of provenance for a value\n     * (i.e., one read from a source or write to a sink), a reference\n     * to the previous provenance of the value (if any), and the tag\n     * operation that resulted the tagId of this ProvenanceTagNode", "type": "record", "namespace": "com.bbn.tc.schema.avro", "fields": [{"type": "com.bbn.tc.schema.avro.UUID", "doc": "Tag ID for this node *", "name": "tagId"}, {"type": ["null", "com.bbn.tc.schema.avro.UUID"], "doc": "* The UUID of the source or sink object associated with this\n         * tag. (Optional)\n         *\n         * This attribute is optional because if the\n         * ProvenanceTagNode is simply joining two existing\n         * provenances (e.g., when two values are added together), there\n         * is no flow object associated with that definition.\n         *", "name": "flowObject"}, {"type": "com.bbn.tc.schema.avro.UUID", "doc": "Subject that is performing the src/sink action *", "name": "subject"}, {"default": null, "type": ["null", "string"], "doc": "System call that read/wrote the data *", "name": "systemCall"}, {"default": null, "type": ["null", "string"], "doc": "The program point where the event was triggered (e.g., executable and line number), (Optional)", "name": "programPoint"}, {"default": null, "type": ["null", "com.bbn.tc.schema.avro.UUID"], "doc": "The previous tag for this value *", "name": "prevTagId"}, {"default": null, "type": ["null", {"namespace": "com.bbn.tc.schema.avro", "type": "enum", "doc": "* The tag opcode describes the provenance relation i.e., how multiple sources are combined to\n     * produce the output. We identify the following provenance relations", "symbols": ["TAG_OP_UNION", "TAG_OP_ENCODE", "TAG_OP_STRONG", "TAG_OP_MEDIUM", "TAG_OP_WEAK"], "name": "TagOpCode"}], "doc": "Tag operation that resulted in the tagId of this ProvenanceTagNode *", "name": "opcode"}, {"default": null, "type": ["null", {"items": "com.bbn.tc.schema.avro.UUID", "type": "array"}], "name": "tagIds"}, {"default": null, "type": ["null", {"namespace": "com.bbn.tc.schema.avro", "type": "enum", "doc": "* The integrity tag may be used to specify the initial integrity of an entity,\n     * or to endorse its content after performing appropriate checking/sanitization.", "symbols": ["INTEGRITY_UNTRUSTED", "INTEGRITY_BENIGN", "INTEGRITY_INVULNERABLE"], "name": "IntegrityTag"}], "doc": "The integrity tag may be used to specify the intial\n         *  integrity of an entity, or to endorse it content after\n         *  performing appropriate checking/sanitization.", "name": "itag"}, {"default": null, "type": ["null", {"namespace": "com.bbn.tc.schema.avro", "type": "enum", "doc": "* The confidentiality tag may be used to specify the initial confidentiality of an entity,\n     * or to declassify its content after performing appropriate checking/sanitization.", "symbols": ["CONFIDENTIALITY_SECRET", "CONFIDENTIALITY_SENSITIVE", "CONFIDENTIALITY_PRIVATE", "CONFIDENTIALITY_PUBLIC"], "name": "ConfidentialityTag"}], "doc": "* The confidentiality tag may be used to specify the initial\n         * confidentiality of an entity, or to declassify its content\n         * after performing appropriate checking/sanitization.", "name": "ctag"}, {"default": null, "type": ["null", {"type": "map", "values": "string"}], "doc": "* Arbitrary key, value pairs describing the entity.\n         * NOTE: This attribute is meant as a temporary place holder for items that\n         * will become first-class attributes in the next CDM version.", "name": "properties"}], "name": "ProvenanceTagNode"}, {"doc": "* Subjects represent execution contexts and include mainly threads and processes. They can be more granular and\n     * can represent other execution boundaries such as units and blocks if needed.", "type": "record", "namespace": "com.bbn.tc.schema.avro", "fields": [{"type": "com.bbn.tc.schema.avro.UUID", "doc": "universally unique identifier for the subject", "name": "uuid"}, {"type": {"namespace": "com.bbn.tc.schema.avro", "type": "enum", "doc": "* SubjectType enumerates the types of execution contexts supported.\n     *\n     * SUBJECT_PROCESS,    process\n     * SUBJECT_THREAD,     thread within a process\n     * SUBJECT_UNIT        so far we only know of TRACE BEEP using this", "symbols": ["SUBJECT_PROCESS", "SUBJECT_THREAD", "SUBJECT_UNIT", "SUBJECT_BASIC_BLOCK"], "name": "SubjectType"}, "doc": "the subject type", "name": "type"}, {"type": "int", "doc": "Context ID: OS process id for type process, thread id for threads", "name": "cid"}, {"default": null, "type": ["null", "com.bbn.tc.schema.avro.UUID"], "doc": "* parent subject's UUID. For a process, this is a parent\n         * process. For a thread, this is the process that created the\n         * thread. Only optional because in some cases the parent not\n         * be known; null value indicates that the parent is unknown.", "name": "parentSubject"}, {"type": "com.bbn.tc.schema.avro.UUID", "doc": "UUID of local principal that owns this subject", "name": "localPrincipal"}, {"type": "long", "doc": "* The start time of the subject\n         * A timestamp stores the number of nanoseconds from the unix epoch, 1 January 1970 00:00:00.000000 UTC.", "name": "startTimestampNanos"}, {"default": null, "type": ["null", "int"], "doc": "unit id for unit based instrumentation (Optional)", "name": "unitId"}, {"default": null, "type": ["null", "int"], "doc": "iteration and count are used for distinguishing individual ?units? of execution (Optional)", "name": "iteration"}, {"default": null, "type": ["null", "int"], "name": "count"}, {"default": null, "type": ["null", "string"], "doc": "Process command line arguments including process name (Optional)", "name": "cmdLine"}, {"default": null, "type": ["null", {"namespace": "com.bbn.tc.schema.avro", "type": "enum", "doc": "* Windows allows Subjects (processes) to have the following\n     * enumerated privilege levels.", "symbols": ["LIMITED", "ELEVATED", "FULL"], "name": "PrivilegeLevel"}], "doc": "Windows allows processes to have different privilege levels (Optional)", "name": "privilegeLevel"}, {"default": null, "type": ["null", {"items": "string", "type": "array"}], "doc": "* imported libraries. (Optional). Lists the libraries that\n         * are expected to be loaded, but may not necessarily\n         * correspond 1-to-1 with actual load library events because\n         * some libraries may already be loaded when this event\n         * occurs.", "name": "importedLibraries"}, {"default": null, "type": ["null", {"items": "string", "type": "array"}], "doc": "exported libraries. (Optional)", "name": "exportedLibraries"}, {"default": null, "type": ["null", {"type": "map", "values": "string"}], "doc": "* Arbitrary key, value pairs describing the entity.\n         * NOTE: This attribute is meant as a temporary place holder for items that\n         * will become first-class attributes in the next CDM version.", "name": "properties"}], "name": "Subject"}, {"doc": "* Represents a file on the file system. Instantiates an AbstractObject.", "type": "record", "namespace": "com.bbn.tc.schema.avro", "fields": [{"type": "com.bbn.tc.schema.avro.UUID", "doc": "Universally unique identifier for the object", "name": "uuid"}, {"type": {"doc": "*  Objects, in general, represent data sources and sinks which\n     *  could include sockets, files, memory, and any data in general\n     *  that can be an input and/or output to an event.  This record\n     *  is intended to be abstract i.e., one should not instantiate an\n     *  Object but rather instantiate one of its sub types (ie,\n     *  encapsulating records) FileObject, UnnamedPipeObject,\n     *  RegistryKeyObject, NetFlowObject, MemoryObject, or\n     *  SrcSinkObject.", "type": "record", "namespace": "com.bbn.tc.schema.avro", "fields": [{"default": null, "type": ["null", {"type": "fixed", "namespace": "com.bbn.tc.schema.avro", "name": "SHORT", "size": 2}], "doc": "Permission bits defined over the object (Optional)", "name": "permission"}, {"default": null, "type": ["null", "int"], "doc": "* Used to track when an object is deleted and a new one is\n         * created with the same identifier. This is useful for when\n         * UUIDs are based on something not likely to be unique, such\n         * as file path.", "name": "epoch"}, {"default": null, "type": ["null", {"type": "map", "values": "string"}], "doc": "* Arbitrary key, value pairs describing the entity.\n         * NOTE: This attribute is meant as a temporary place holder for items that\n         * will become first-class attributes in the next CDM version.", "name": "properties"}], "name": "AbstractObject"}, "doc": "The base object attributes", "name": "baseObject"}, {"type": {"namespace": "com.bbn.tc.schema.avro", "type": "enum", "doc": "* These types enumerate the types of FileObjects", "symbols": ["FILE_OBJECT_FILE", "FILE_OBJECT_DIR", "FILE_OBJECT_NAMED_PIPE", "FILE_OBJECT_UNIX_SOCKET", "FILE_OBJECT_PEFILE"], "name": "FileObjectType"}, "doc": "The type of FileObject", "name": "type"}, {"default": null, "type": ["null", "int"], "doc": "The file descriptor (Optional)", "name": "fileDescriptor"}, {"default": null, "type": ["null", "com.bbn.tc.schema.avro.UUID"], "doc": "UUID of local principal that owns this file object.  This\n         * attribute is optional because there are times when \n         * the owner of the file may not be known at the time the file\n         * object is reported (e.g., missed open call). Otherwise,\n         * the local principal SHOULD be included.", "name": "localPrincipal"}, {"default": null, "type": ["null", "long"], "doc": "* The file size in bytes (Optional). This attribute reports\n         * the file size at the time the FileObject is created. Since records\n         * are not updated, changes in file size is trackable via the events\n         * that changed the file size.", "name": "size"}, {"default": null, "type": ["null", "string"], "doc": "* portable execution (PE) info for windows (Optional).\n         * Note from FiveDirections: We will LIKELY change this type for engagement 3", "name": "peInfo"}, {"default": null, "type": ["null", {"items": {"doc": "* Cryptographic hash records represent one or more cryptographic hashes for\n     * an object, typically, a FileObject.", "type": "record", "namespace": "com.bbn.tc.schema.avro", "fields": [{"type": {"namespace": "com.bbn.tc.schema.avro", "type": "enum", "doc": "Cryptographich hash types", "symbols": ["MD5", "SHA1", "SHA256", "SHA512", "AUTHENTIHASH", "SSDEEP", "IMPHASH"], "name": "CryptoHashType"}, "doc": "The type of hash used", "name": "type"}, {"type": "string", "doc": "The base64 encoded hash value", "name": "hash"}], "name": "CryptographicHash"}, "type": "array"}], "doc": "(Optional) Zero or more cryptographic hashes over the FileObject", "name": "hashes"}], "name": "FileObject"}, {"doc": "* Represents an unnamed pipe. Instantiates an AbstractObject.", "type": "record", "namespace": "com.bbn.tc.schema.avro", "fields": [{"type": "com.bbn.tc.schema.avro.UUID", "doc": "Universally unique identifier for the object", "name": "uuid"}, {"type": "com.bbn.tc.schema.avro.AbstractObject", "doc": "The base object attributes", "name": "baseObject"}, {"type": "int", "doc": "File descriptors for reading and writing.", "name": "sourceFileDescriptor"}, {"type": "int", "name": "sinkFileDescriptor"}], "name": "UnnamedPipeObject"}, {"doc": "* Represents a registry key. Instantiates an AbstractObject.", "type": "record", "namespace": "com.bbn.tc.schema.avro", "fields": [{"type": "com.bbn.tc.schema.avro.UUID", "doc": "Universally unique identifier for the object", "name": "uuid"}, {"type": "com.bbn.tc.schema.avro.AbstractObject", "doc": "The base object attributes", "name": "baseObject"}, {"type": "string", "doc": "The registry key/path", "name": "key"}, {"default": null, "type": ["null", {"doc": "* Values represent transient data, mainly parameters to\n     * events. Values are created and used once within an event's\n     * execution and are relevant mainly during fine-grained tracking\n     * (such as with tag/taint propagation).  Values have tags\n     * describing their provenance. Sometimes the actual value's value\n     * is reported in addition to the value's metadata\n     *\n     * The size of the value is the number of elements of type\n     * valueDataType. This should be -1 for primitive and complex\n     * types.  For arrays, the size is the array length. i.e., if\n     * size >= 0, then this value is an array.  A complex value (such as\n     * an object) can contain other values (primitives or other\n     * complex values) within it, as components.\n     *\n     * Examples: <br>\n     *\n     * an integer will have size=-1 and valueDataType=INT, and\n     * valueBytes.length=4 bytes <br>\n     *\n     * an int[4] will have size=4 and valueDataType=INT, and\n     * valueBytes.length=16 bytes (4*4) <br>\n     *\n     * a string s=\"abc\" has size=3 and valueDataType=CHAR, and\n     * valueBytes.length=12 bytes (UTF32_BE encoding; 4 bytes per\n     * char) <br>\n     *\n     * an MyClass obj has size=-1, valueDataType=COMPLEX,\n     * runtimeDataType=\"MyClass\", valueBytes=<pointer> <br>", "type": "record", "namespace": "com.bbn.tc.schema.avro", "fields": [{"default": -1, "type": "int", "doc": "The size of the value: the number of elements of type valueDataType; -1 for non-arrays", "name": "size"}, {"type": {"namespace": "com.bbn.tc.schema.avro", "type": "enum", "doc": "* A value type is either source, sink, or control This is for\n     * Event parameters to distinguish source/sink values vs control\n     * parameters (such as a file descriptor).", "symbols": ["VALUE_TYPE_SRC", "VALUE_TYPE_SINK", "VALUE_TYPE_CONTROL"], "name": "ValueType"}, "doc": "The type indicates whether it's a source, sink, or control value", "name": "type"}, {"type": {"namespace": "com.bbn.tc.schema.avro", "type": "enum", "doc": "* A value data type is one of the primitive data types. A string is treated as a char array", "symbols": ["VALUE_DATA_TYPE_BYTE", "VALUE_DATA_TYPE_BOOL", "VALUE_DATA_TYPE_CHAR", "VALUE_DATA_TYPE_SHORT", "VALUE_DATA_TYPE_INT", "VALUE_DATA_TYPE_FLOAT", "VALUE_DATA_TYPE_LONG", "VALUE_DATA_TYPE_DOUBLE", "VALUE_DATA_TYPE_COMPLEX"], "name": "ValueDataType"}, "doc": "The actual datatype of the value elements, e.g., int, double, byte, etc. (Optional)\n         *  Strings are treated as char[] so type=CHAR\n         *  String[] is a COMPLEX value whose components are the string values (each modeled as a char[])\n         *  Complex composite objects comprising of primitive values use the COMPLEX type", "name": "valueDataType"}, {"default": false, "type": "boolean", "doc": "Whether this value is null, needed to indicate null objects (default: false)", "name": "isNull"}, {"default": null, "type": ["null", "string"], "doc": "the name of the Value, string. (Optional)", "name": "name"}, {"default": null, "type": ["null", "string"], "doc": "The runtime data type of the value (Optional); For example, an object of dataType=COMPLEX, can have\n         *  a runtime data type of say \"MyClass\"", "name": "runtimeDataType"}, {"default": null, "type": ["null", "bytes"], "doc": "* The actual bytes of the value in Big Endian format, e.g.,\n         * an int is converted to a 4 byte buffer (Optional)\n         *\n         * Strings are represented as an array of UTF32_BE encoded\n         * characters (i.e., 4 bytes per char)", "name": "valueBytes"}, {"default": null, "type": ["null", {"items": {"doc": "* This record is a single tuple in a run length encoding of tags", "type": "record", "namespace": "com.bbn.tc.schema.avro", "fields": [{"default": 0, "type": "int", "name": "numValueElements"}, {"type": "com.bbn.tc.schema.avro.UUID", "name": "tagId"}], "name": "TagRunLengthTuple"}, "type": "array"}], "doc": "* The value's tag expression describing its provenance (Optional)\n         * Since value could be an array, the tag can use run length encoding if needed.", "name": "tag"}, {"default": null, "type": ["null", {"items": "com.bbn.tc.schema.avro.Value", "type": "array"}], "doc": "A complex value might comprise other component values if needed (Optional)", "name": "components"}], "name": "Value"}], "doc": "The value of the key", "name": "value"}, {"default": null, "type": ["null", "long"], "doc": "The entry size in bytes (Optional)", "name": "size"}], "name": "RegistryKeyObject"}, {"doc": "* Represents a network flow object. Instantiates an AbstractObject.", "type": "record", "namespace": "com.bbn.tc.schema.avro", "fields": [{"type": "com.bbn.tc.schema.avro.UUID", "doc": "Universally unique identifier for the object", "name": "uuid"}, {"type": "com.bbn.tc.schema.avro.AbstractObject", "doc": "The base object attributes", "name": "baseObject"}, {"type": "string", "doc": "The local IP address for this flow", "name": "localAddress"}, {"type": "int", "doc": "The local network port for this flow", "name": "localPort"}, {"type": "string", "doc": "The remote IP address for this flow", "name": "remoteAddress"}, {"type": "int", "doc": "The remote network port for this flow", "name": "remotePort"}, {"default": null, "type": ["null", "int"], "doc": "The IP protocol number e.g., TCP=6", "name": "ipProtocol"}, {"default": null, "type": ["null", "int"], "doc": "The file descriptor (Optional)", "name": "fileDescriptor"}], "name": "NetFlowObject"}, {"doc": "* Represents a page in memory. Instantiates an AbstractObject.\n     * TODO: is memory really an object (with permissions and so on) or is it a transient data?", "type": "record", "namespace": "com.bbn.tc.schema.avro", "fields": [{"type": "com.bbn.tc.schema.avro.UUID", "doc": "Universally unique identifier for the object", "name": "uuid"}, {"type": "com.bbn.tc.schema.avro.AbstractObject", "doc": "The base object attributes", "name": "baseObject"}, {"type": "long", "doc": "The memory address", "name": "memoryAddress"}, {"default": null, "type": ["null", "long"], "doc": "(Optional) decomposed memory addressed into pageNumber and pageOffset", "name": "pageNumber"}, {"default": null, "type": ["null", "long"], "name": "pageOffset"}, {"default": null, "type": ["null", "long"], "doc": "The entry size in bytes (Optional)", "name": "size"}], "name": "MemoryObject"}, {"doc": "* Represents a generic source or sink on the host device that is can be a file, memory, or netflow.\n     * This is the most basic representation of a source or sink, basically specifying its type only.", "type": "record", "namespace": "com.bbn.tc.schema.avro", "fields": [{"type": "com.bbn.tc.schema.avro.UUID", "doc": "Universally unique identifier for the object", "name": "uuid"}, {"type": "com.bbn.tc.schema.avro.AbstractObject", "doc": "The base object attributes", "name": "baseObject"}, {"type": {"namespace": "com.bbn.tc.schema.avro", "type": "enum", "doc": "* There are many types of sources such as sensors.  The type of a\n     * sensor could be base (close to hardware) or composite.  This is\n     * mostly (only?) applicable to the Android platform.  See\n     * https://source.android.com/devices/sensors/index.html for\n     * details.", "symbols": ["SOURCE_ACCELEROMETER", "SOURCE_TEMPERATURE", "SOURCE_GYROSCOPE", "SOURCE_MAGNETIC_FIELD", "SOURCE_HEART_RATE", "SOURCE_LIGHT", "SOURCE_PROXIMITY", "SOURCE_PRESSURE", "SOURCE_RELATIVE_HUMIDITY", "SOURCE_LINEAR_ACCELERATION", "SOURCE_MOTION", "SOURCE_STEP_DETECTOR", "SOURCE_STEP_COUNTER", "SOURCE_TILT_DETECTOR", "SOURCE_ROTATION_VECTOR", "SOURCE_GRAVITY", "SOURCE_GEOMAGNETIC_ROTATION_VECTOR", "SOURCE_CAMERA", "SOURCE_GPS", "SOURCE_AUDIO", "SOURCE_SYSTEM_PROPERTY", "SOURCE_ENV_VARIABLE", "SOURCE_ACCESSIBILITY_SERVICE", "SOURCE_ACTIVITY_MANAGEMENT", "SOURCE_ALARM_SERVICE", "SOURCE_ANDROID_TV", "SOURCE_AUDIO_IO", "SOURCE_BACKUP_MANAGER", "SOURCE_BINDER", "SOURCE_BLUETOOTH", "SOURCE_BOOT_EVENT", "SOURCE_BROADCAST_RECEIVER_MANAGEMENT", "SOURCE_CLIPBOARD", "SOURCE_COMPONENT_MANAGEMENT", "SOURCE_CONTENT_PROVIDER", "SOURCE_CONTENT_PROVIDER_MANAGEMENT", "SOURCE_DATABASE", "SOURCE_DEVICE_ADMIN", "SOURCE_DEVICE_SEARCH", "SOURCE_DEVICE_USER", "SOURCE_DISPLAY", "SOURCE_DROPBOX", "SOURCE_EMAIL", "SOURCE_EXPERIMENTAL", "SOURCE_FILE", "SOURCE_FILE_SYSTEM_MANAGEMENT", "SOURCE_FINGERPRINT", "SOURCE_FLASHLIGHT", "SOURCE_HDMI", "SOURCE_IDLE_DOCK_SCREEN", "SOURCE_IMS", "SOURCE_INFRARED", "SOURCE_INSTALLED_PACKAGES", "SOURCE_JSSE_TRUST_MANAGER", "SOURCE_KEYCHAIN", "SOURCE_KEYGUARD", "SOURCE_LOCATION", "SOURCE_MACHINE_LEARNING", "SOURCE_MEDIA_LOCAL_MANAGEMENT", "SOURCE_MEDIA_LOCAL_PLAYBACK", "SOURCE_MEDIA_NETWORK_CONNECTION", "SOURCE_MEDIA_REMOTE_PLAYBACK", "SOURCE_NETWORK_MANAGEMENT", "SOURCE_NFC", "SOURCE_NOTIFICATION", "SOURCE_PAC_PROXY", "SOURCE_PERMISSIONS", "SOURCE_PERSISTANT_DATA", "SOURCE_POWER_MANAGEMENT", "SOURCE_PRINT_SERVICE", "SOURCE_PROCESS_MANAGEMENT", "SOURCE_RPC", "SOURCE_SCREEN_AUDIO_CAPTURE", "SOURCE_SERIAL_PORT", "SOURCE_SERVICE_MANAGEMENT", "SOURCE_SMS_MMS", "SOURCE_SPEECH_INTERACTION", "SOURCE_STATUS_BAR", "SOURCE_SYNC_FRAMEWORK", "SOURCE_TELEPHONY", "SOURCE_TEXT_SERVICES", "SOURCE_THREADING", "SOURCE_TIME_EVENT", "SOURCE_UI", "SOURCE_UI_AUTOMATION", "SOURCE_UI_RPC", "SOURCE_UID_EVENT", "SOURCE_USAGE_STATS", "SOURCE_USB", "SOURCE_USER_ACCOUNTS_MANAGEMENT", "SOURCE_VIBRATOR", "SOURCE_WAKE_LOCK", "SOURCE_WALLPAPER_MANAGER", "SOURCE_WAP", "SOURCE_WEB_BROWSER", "SOURCE_WIDGETS", "SOURCE_SINK_IPC", "SOURCE_SINK_UNKNOWN"], "name": "SrcSinkType"}, "doc": "The type of the object", "name": "type"}, {"default": null, "type": ["null", "int"], "doc": "The file descriptor (Optional)", "name": "fileDescriptor"}], "name": "SrcSinkObject"}, {"doc": "* Events represent actions executed by subjects on data objects\n     * or other subjects.  Events are generally system calls, but\n     * could also include function calls, instruction executions, or\n     * even more abstract notions. Events are the core entity in the\n     * data model and they are the main abstraction for representing\n     * information flow between data objects and subjects.", "type": "record", "namespace": "com.bbn.tc.schema.avro", "fields": [{"type": "com.bbn.tc.schema.avro.UUID", "doc": "A universally unique identifier for the event", "name": "uuid"}, {"default": 0, "type": "long", "doc": "A logical sequence number for ordering events relative to each other within a subject's execution context", "name": "sequence"}, {"type": {"namespace": "com.bbn.tc.schema.avro", "type": "enum", "doc": "* EventType enumerates the most common system calls. Since there\n     * are hundreds of possible system calls, enumerating all of them\n     * and managing the list across OS versions is a\n     * challenge. EVENT_OTHER is the catch all for events not enumerated here. Any events\n     * that are expected to be of importance, should be included in this list.", "symbols": ["EVENT_ACCEPT", "EVENT_BIND", "EVENT_BLIND", "EVENT_CHANGE_PRINCIPAL", "EVENT_CHECK_FILE_ATTRIBUTES", "EVENT_CLONE", "EVENT_CLOSE", "EVENT_CONNECT", "EVENT_CREATE_OBJECT", "EVENT_CREATE_THREAD", "EVENT_DUP", "EVENT_EXECUTE", "EVENT_FNCTL", "EVENT_FORK", "EVENT_LINK", "EVENT_LSEEK", "EVENT_MMAP", "EVENT_MODIFY_FILE_ATTRIBUTES", "EVENT_MODIFY_PROCESS", "EVENT_MPROTECT", "EVENT_OPEN", "EVENT_OTHER", "EVENT_READ", "EVENT_RECVFROM", "EVENT_RECVMSG", "EVENT_RENAME", "EVENT_SENDTO", "EVENT_SENDMSG", "EVENT_SHM", "EVENT_SIGNAL", "EVENT_TRUNCATE", "EVENT_UNIT", "EVENT_UNLINK", "EVENT_UPDATE", "EVENT_WAIT", "EVENT_WRITE", "EVENT_EXIT", "EVENT_LOADLIBRARY", "EVENT_BOOT", "EVENT_LOGCLEAR", "EVENT_MOUNT", "EVENT_STARTSERVICE", "EVENT_LOGIN", "EVENT_LOGOUT"], "name": "EventType"}, "doc": "The type of the event", "name": "type"}, {"type": "int", "doc": "The thread id to which this event belongs", "name": "threadId"}, {"type": "com.bbn.tc.schema.avro.UUID", "doc": "UUID of Subject that generated this event", "name": "subject"}, {"default": null, "type": ["null", "com.bbn.tc.schema.avro.UUID"], "doc": "* UUID of Object/Subject this event acts on. For events that\n         * have two arguments, this attribute contains the first\n         * argument. This attribute is optional because it may not be\n         * relevant for some events.", "name": "predicateObject"}, {"default": null, "type": ["null", "string"], "doc": "If applicable, the object's absolute file path (Optional)", "name": "predicateObjectPath"}, {"default": null, "type": ["null", "com.bbn.tc.schema.avro.UUID"], "doc": "Optional UUID of Object/Subject for events that take two\n         *  arguments (e.g., link, rename, etc). This attribute contains the second argument.", "name": "predicateObject2"}, {"default": null, "type": ["null", "string"], "doc": "If applicable, the second object's absolute file path (Optional)", "name": "predicateObject2Path"}, {"type": "long", "doc": "* The time at which the event occurred. Timestamps allow\n         * reasoning about order of events on a host when the same\n         * clock is used. A timestamp stores the number of nanoseconds\n         * from the unix epoch, 1 January 1970 00:00:00.000000 UTC.\n         *\n         * TODO: When different clocks are used on a host or across\n         * hosts, we need to also define a clock source", "name": "timestampNanos"}, {"default": null, "type": ["null", "string"], "doc": "Event name (Optional)", "name": "name"}, {"default": null, "type": ["null", {"items": "com.bbn.tc.schema.avro.Value", "type": "array"}], "doc": "Event parameters represented as values, see Value (Optional)", "name": "parameters"}, {"default": null, "type": ["null", "long"], "doc": "Location refers to the location of the data affecting the event\n         *  (e.g., the read offset in the file for the read system call event). (Optional)", "name": "location"}, {"default": null, "type": ["null", "long"], "doc": "Size refers to the size of the data affecting the event\n         *  (e.g., the number of bytes read from the file for the read system call event). (Optional)", "name": "size"}, {"default": null, "type": ["null", "string"], "doc": "The program point where the event was triggered (e.g., executable and line number). (Optional)", "name": "programPoint"}, {"default": null, "type": ["null", {"type": "map", "values": "string"}], "doc": "* Arbitrary key, value pairs describing the entity.\n         * NOTE: This attribute is meant as a temporary place holder for items that\n         * will become first-class attributes in the next CDM version.", "name": "properties"}], "name": "Event"}, {"doc": "* This record captures a relationship edge between two units, one\n     * dependent on the other. This relationship is inferred from a\n     * combination of underlying events.", "type": "record", "namespace": "com.bbn.tc.schema.avro", "fields": [{"type": "com.bbn.tc.schema.avro.UUID", "name": "unit"}, {"type": "com.bbn.tc.schema.avro.UUID", "name": "dependentUnit"}], "name": "UnitDependency"}, {"doc": "* TimeMarker records are used to delineate time periods in a data\n     * stream to help consumers know their current read position in the\n     * data stream.", "type": "record", "namespace": "com.bbn.tc.schema.avro", "fields": [{"type": "long", "doc": "Timestamp in nanoseconds", "name": "tsNanos"}], "name": "TimeMarker"}], "name": "datum"}, {"default": "16", "type": "string", "name": "CDMVersion"}, {"type": {"namespace": "com.bbn.tc.schema.avro", "type": "enum", "doc": "* InstrumentationSource identifies the source reporting provenance information.", "symbols": ["SOURCE_ANDROID_JAVA_CLEARSCOPE", "SOURCE_ANDROID_NATIVE_CLEARSCOPE", "SOURCE_FREEBSD_OPENBSM_TRACE", "SOURCE_FREEBSD_DTRACE_CADETS", "SOURCE_FREEBSD_TESLA_CADETS", "SOURCE_FREEBSD_LOOM_CADETS", "SOURCE_FREEBSD_MACIF_CADETS", "SOURCE_LINUX_AUDIT_TRACE", "SOURCE_LINUX_PROC_TRACE", "SOURCE_LINUX_BEEP_TRACE", "SOURCE_LINUX_THEIA", "SOURCE_WINDOWS_DIFT_FAROS", "SOURCE_WINDOWS_PSA_FAROS", "SOURCE_WINDOWS_FIVEDIRECTIONS"], "name": "InstrumentationSource"}, "doc": "What source generated this record?", "name": "source"}], "name": "TCCDMDatum"} Pπùu„≤òoc ü"SI∂Ó®≤ ï·Ω{ÌPbã7ü Ê»ﬂÏ 0root  16iGk"˙Áº.D®Bç∆ ÜÄ ï·Ω{ÌPbã7ü Ê»ﬂÏ         16·»≠l)∫VÊÅs˜FD™ûU õiGk"˙Áº.D®Bç∆iGk"˙Áº.D®Bç∆   “•Üê∏•™)aue_setuid uid        execping 16iÍX¨˙Áº.D®Bç∆ åÄiGk"˙Áº.D®Bç∆ï·Ω{ÌPbã7ü Ê»ﬂÏ“•Üê∏•™)        16—÷gú›GQyêéÒ@æjõiGk"˙Áº.D®Bç∆iÍX¨˙Áº.D®Bç∆   “•Üê∏•™)aue_pdfork    execping 16iÍhH˙Áº.D®Bç∆ éÄiÍX¨˙Áº.D®Bç∆ï·Ω{ÌPbã7ü Ê»ﬂÏûöÄë∏•™)        16ònòõ/’[V©ñﬁIdã>rûùiÍX¨˙Áº.D®Bç∆iÍhH˙Áº.D®Bç∆   ûöÄë∏•™)aue_fork    execping 16iÍO{˙Áº.D®Bç∆        16óÂ.z˛Ÿ\ìç¥õ⁄tˇ4õiGk"˙Áº.D®Bç∆iÍO{˙Áº.D®Bç∆   ûöÄë∏•™)aue_sendto  ™ execping 16iÍOã˙Áº.D®Bç∆        16)c∂S*@TQ∂=lhÄ)ı.ûùiÍX¨˙Áº.D®Bç∆iÍOã˙Áº.D®Bç∆   ûöÄë∏•™)aue_recvfrom  & execping 16c6$a4¶Uü•|ﬂë≥L∑
.ûùiÍX¨˙Áº.D®Bç∆iÍOã˙Áº.D®Bç∆   ûöÄë∏•™)aue_recvfrom  Ñ execping 16iÍa˙Áº.D®Bç∆        16!d"åUZº|ÁZ?≈Ao4ûùiÍX¨˙Áº.D®Bç∆iÍa˙Áº.D®Bç∆   ûöÄë∏•™)aue_sendto  f execping 16iÍa˙Áº.D®Bç∆        16n™π_][Æôâ[5πWt.éúiÍhH˙Áº.D®Bç∆iÍa˙Áº.D®Bç∆   ËŸ˚ë∏•™)aue_recvfrom  & execping 16È¿û√ÆU1∑;°…¬‹∏.éúiÍhH˙Áº.D®Bç∆iÍa˙Áº.D®Bç∆   ËŸ˚ë∏•™)aue_recvfrom  @ execping 16iÍôÖ˙Áº.D®Bç∆ êÄiÍhH˙Áº.D®Bç∆ï·Ω{ÌPbã7ü Ê»ﬂÏËŸ˚ë∏•™)        16ˇ-Gö@%^çÔ´]¥IéúiÍhH˙Áº.D®Bç∆iÍôÖ˙Áº.D®Bç∆   ËŸ˚ë∏•™)aue_pdfork    execping 161N®ΩÚ´Y‹∂dô¸â˝ô4éúiÍhH˙Áº.D®Bç∆iÍa˙Áº.D®Bç∆   ÄƒÙí∏•™)aue_sendto  Æ execping 16-¬ˆ¢ç TΩ√™íœ∆t.ûùiÍX¨˙Áº.D®Bç∆iÍa˙Áº.D®Bç∆   ÄƒÙí∏•™)aue_recvfrom  & execping 16ØqÅ ´^¥∑ƒ‹Ò.ûùiÍX¨˙Áº.D®Bç∆iÍa˙Áº.D®Bç∆   ÄƒÙí∏•™)aue_recvfrom  à execping 16Òç}é4UFêm¸©”‡Âπ6éúiÍhH˙Áº.D®Bç∆iÍa˙Áº.D®Bç∆   ÄƒÙí∏•™)aue_sendmsg   execping 16\Ù€ŸN~]y™ÃÉ/‹5à>0ûùiÍX¨˙Áº.D®Bç∆iÍa˙Áº.D®Bç∆   ÄƒÙí∏•™)aue_recvmsg   execping 16iÍíI˙Áº.D®Bç∆        16-Õ§Éˇ
R∫ôA˘v◊Ëa4ûùiÍX¨˙Áº.D®Bç∆iÍíI˙Áº.D®Bç∆   ÄƒÙí∏•™)aue_sendto  ∞ execping 16iÍía˙Áº.D®Bç∆        16†!X©‚f\ØéÊò¿°H¥L .‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   ÄƒÙí∏•™)aue_recvfrom  & execping 16ôN–y¨^
Ö‡;Æ3ÆA»".‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   ÄƒÙí∏•™)aue_recvfrom  ä execping 16ßM%«ßÜ]ØõcF°]·∫í$6ûùiÍX¨˙Áº.D®Bç∆iÍíI˙Áº.D®Bç∆   ÄƒÙí∏•™)aue_sendmsg   execping 16ﬂ`Qi-lZtîË»d¿1π&0‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   ÄƒÙí∏•™)aue_recvmsg   execping 16µhú8ﬂ˚Q#ÆâÂï7ìœ(4ûùiÍX¨˙Áº.D®Bç∆iÍOã˙Áº.D®Bç∆   »πÓì∏•™)aue_sendto  ¨ execping 163P”KÄXã”´∑ÿÄë^         16ºùë„gΩ\Ä≠∑™03j:®*(‹õiÍôÖ˙Áº.D®Bç∆3P”KÄXã”´∑ÿÄë^/dev/null  »πÓì∏•™)aue_openat_rwtc 
flags    mode        execping 16∑ÊAHZW∑-v»Mò⁄,.õiGk"˙Áº.D®Bç∆iÍO{˙Áº.D®Bç∆   »πÓì∏•™)aue_recvfrom  & execping 16f·´Wñ^UΩa÷5è_5..õiGk"˙Áº.D®Bç∆iÍO{˙Áº.D®Bç∆   »πÓì∏•™)aue_recvfrom  Ü execping 16LâNXü[ÔóÀQOßπ06ûùiÍX¨˙Áº.D®Bç∆iÍOã˙Áº.D®Bç∆   »πÓì∏•™)aue_sendmsg   execping 16¯“†jÿ^âÇÁ˜*¯Ûú!20õiGk"˙Áº.D®Bç∆iÍO{˙Áº.D®Bç∆   »πÓì∏•™)aue_recvmsg   execping 16ºÃo∏„Q∏,Q*ÕO°4‹õiÍôÖ˙Áº.D®Bç∆3P”KÄXã”´∑ÿÄë^   »πÓì∏•™)aue_close    execping 16Ú¯≈û6]Q|ãíNè]¯vs6õiGk"˙Áº.D®Bç∆iÍX¨˙Áº.D®Bç∆   »πÓì∏•™)aue_close    execping 16ãò5ÈÀ[™/sôyŸO¨8.éúiÍhH˙Áº.D®Bç∆iÍa˙Áº.D®Bç∆   »πÓì∏•™)aue_recvfrom    execping 16p≥:ŒßA^\Ñ„_ÿÇgäX:õiGk"˙Áº.D®Bç∆iÍO{˙Áº.D®Bç∆   »πÓì∏•™)aue_close    execping 16*’NH¬WäË"aÑ<4õiGk"˙Áº.D®Bç∆iÍíI˙Áº.D®Bç∆   »πÓì∏•™)aue_sendto  h execping 16&6Ä˛ﬂ˘R<â'm@~™Ü>HéúiÍhH˙Áº.D®Bç∆iÍhH˙Áº.D®Bç∆   »πÓì∏•™)aue_exit    execping 16æ≤/jQW[ëjs|€WB+         16 †dõC0\u™àúx⁄

6 8317   16{,QÁº-D®Bç∆ ä †dõC0\u™àúx⁄

6         16•ò¬ZÓh^∂≈“ú5ÿ,@,˙õ{,QÁº-D®Bç∆æ≤/jQW[ëjs|€WB+<unknown>  »πÓì∏•™)aue_readv   exectmux 16ùpº◊"êYÜñ·aüâbï2B.‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   ∫øËî∏•™)aue_recvfrom  & execping 16oãÌ6|ZÌõwÓ π>∞D,˙õ{,QÁº-D®Bç∆æ≤/jQW[ëjs|€WB+<unknown>  ∫øËî∏•™)aue_readv  ¸ exectmux 16©ﬁ∑ÃiÊ_ÃÉ†Ò¿˛HXzF.‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   ∫øËî∏•™)aue_recvfrom  B execping 16Ì( ˆ~R∂ ~{Ç~Ø         16\¥~À∆^`ò!ﬁåœ∑PHF˙õ{,QÁº-D®Bç∆Ì( ˆ~R∂ ~{Ç~Ø/dev/tty  ∫øËî∏•™)aue_writev  Ú exectmux 16ö[œ J¬^ÕïXôûÀ<uJ4‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   ∫øËî∏•™)aue_sendto  ú execping 16ÿ˛©‡∫PPM¢°®—úU’>L.õiGk"˙Áº.D®Bç∆iÍíI˙Áº.D®Bç∆   ∫øËî∏•™)aue_recvfrom  & execping 16Ñ”˘foØZ˜ák∂G<N.õiGk"˙Áº.D®Bç∆iÍíI˙Áº.D®Bç∆   ∫øËî∏•™)aue_recvfrom  v execping 16«ÆMp¯]ïï‚ﬁqøN<†P4õiGk"˙Áº.D®Bç∆iÍíI˙Áº.D®Bç∆   ∫øËî∏•™)aue_sendto  ‚ execping 16MÖû]ì•4’.¯]¶R.‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   ∫øËî∏•™)aue_recvfrom  & execping 16“ﬂlï»Q	äøØYS@6T.‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   ∫øËî∏•™)aue_recvfrom  º execping 16¿ñvçg`_ÆûÁªüùêV4‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   Ë–‚ï∏•™)aue_sendto  h execping 16¸'S£®Py¶FñåŸ‡Æ}X.õiGk"˙Áº.D®Bç∆iÍíI˙Áº.D®Bç∆   Ë–‚ï∏•™)aue_recvfrom  & execping 16…´	èê€U∂ÇriÅpÖà¸Z,˙õ{,QÁº-D®Bç∆æ≤/jQW[ëjs|€WB+<unknown>  Ë–‚ï∏•™)aue_readv  ò exectmux 169àe`TåTeê·Y`ä7ª|\.õiGk"˙Áº.D®Bç∆iÍíI˙Áº.D®Bç∆   Ë–‚ï∏•™)aue_recvfrom  B execping 160ÖÈÊ‚Stù∆FJ≈ã≠.^4õiGk"˙Áº.D®Bç∆iÍíI˙Áº.D®Bç∆   Ë–‚ï∏•™)aue_sendto  h execping 16ÉÜ7ÏPˇûbâ˙∂™gc`.‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   Ë–‚ï∏•™)aue_recvfrom  & execping 16NSh”tÛYı≥•πr˝OHEb.‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   Ë–‚ï∏•™)aue_recvfrom  B execping 16 f/Ñ£CRkû£hãQådF˙õ{,QÁº-D®Bç∆Ì( ˆ~R∂ ~{Ç~Ø/dev/tty  Ë–‚ï∏•™)aue_writev  ê
 exectmux 16yìNzLƒQõπê•ìYÈÆ f4‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   Ë–‚ï∏•™)aue_sendto  ‚ execping 16üxJ˘V√[6ê{*€ıî·h.õiGk"˙Áº.D®Bç∆iÍíI˙Áº.D®Bç∆   Ë–‚ï∏•™)aue_recvfrom  & execping 16vR –Q^ﬂì4^J¿ë¬jF˙õ{,QÁº-D®Bç∆Ì( ˆ~R∂ ~{Ç~Ø/dev/tty  Ë–‚ï∏•™)aue_writev  " exectmux 16lû?.∫óY]éÍZ`÷=l.õiGk"˙Áº.D®Bç∆iÍíI˙Áº.D®Bç∆   Ë–‚ï∏•™)aue_recvfrom  º execping 16Èƒµ◊R∂ÅEt¿°Å	n4õiGk"˙Áº.D®Bç∆iÍíI˙Áº.D®Bç∆   Ë–‚ï∏•™)aue_sendto  ® execping 16éÌ˙CÒRÕäGÌg9a®Ùp.‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   Ë–‚ï∏•™)aue_recvfrom  & execping 16WÌ?∫®VZYüı:\¨49År.‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   Ë–‚ï∏•™)aue_recvfrom  Ç execping 16ìøÓOœ^…ïzå©0Zt4‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   ÿ◊‹ñ∏•™)aue_sendto  h execping 167w
e_√ô¶íÿ0Úœ©v.õiGk"˙Áº.D®Bç∆iÍíI˙Áº.D®Bç∆   ÿ◊‹ñ∏•™)aue_recvfrom  & execping 16®ö ¯|XWÄ±ì’ZÁÕ^x.õiGk"˙Áº.D®Bç∆iÍíI˙Áº.D®Bç∆   ÿ◊‹ñ∏•™)aue_recvfrom  B execping 16qÅıváXsÉj¸FÅ\…z4õiGk"˙Áº.D®Bç∆iÍíI˙Áº.D®Bç∆   ÿ◊‹ñ∏•™)aue_sendto  h execping 16ñ®‘HZ˜´Ïñ©£Æb…|.‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   ÿ◊‹ñ∏•™)aue_recvfrom  & execping 16(¸/·eR¸îˇIp° N~.‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   ÿ◊‹ñ∏•™)aue_recvfrom  B execping 16éwNø>Z~Åqõ˜ÑIÄ4‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   ÿ◊‹ñ∏•™)aue_sendto  ® execping 16z\M‰kW˛ê´>Q¶◊@Ç.õiGk"˙Áº.D®Bç∆iÍíI˙Áº.D®Bç∆   ÿ◊‹ñ∏•™)aue_recvfrom  & execping 16£æí©≈W®éáìeÒqß“Ñ.õiGk"˙Áº.D®Bç∆iÍíI˙Áº.D®Bç∆   ÿ◊‹ñ∏•™)aue_recvfrom  Ç execping 16ClJ¸«1],™ˆMGj8ÑKÜ4õiGk"˙Áº.D®Bç∆iÍíI˙Áº.D®Bç∆   ÿ◊‹ñ∏•™)aue_sendto  Ï execping 167-á+k[-ÆÚ2®q9Y$à.‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   ÿ◊‹ñ∏•™)aue_recvfrom  & execping 16¥h5+$C\Ø•fıêT/÷aä.‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   ÿ◊‹ñ∏•™)aue_recvfrom  ∆ execping 16í‡Am—êX§ò¢¶Dì¬1´å4‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   òË÷ó∏•™)aue_sendto  h execping 16Ô‰%9]xV—è◊Ù]çé.õiGk"˙Áº.D®Bç∆iÍíI˙Áº.D®Bç∆   òË÷ó∏•™)aue_recvfrom  & execping 16']ºÀe_™®`d∫lπõÈê.õiGk"˙Áº.D®Bç∆iÍíI˙Áº.D®Bç∆   òË÷ó∏•™)aue_recvfrom  B execping 16iÍ@î˙Áº.D®Bç∆        16©Ø†FÍSè¢≠ß∞fLÂíõiGk"˙Áº.D®Bç∆iÍ@î˙Áº.D®Bç∆   òË÷ó∏•™)aue_connect    execping 16xr¬ç!WoÄ*ôı	ÖÕCî4õiGk"˙Áº.D®Bç∆iÍ@î˙Áº.D®Bç∆   òË÷ó∏•™)aue_sendto  Ä execping 16iÍF˙Áº.D®Bç∆        16éÿØH¬ñ_ ã#¶π%ÀÖñ0õiGk"˙Áº.D®Bç∆iÍF˙Áº.D®Bç∆   òË÷ó∏•™)aue_recvmsg  ® execping 16ük◊rƒÆ€WÆƒ^9ó€’¨         16ÇeΩò¿RÈìaÇN*ﬁLòFõiGk"˙Áº.D®Bç∆ük◊rƒÆ€WÆƒ^9ó€’¨BasicOps.json  òË÷ó∏•™)aue_write  ∆ execping 16ÏÈï…È_ıìxØ‚S≥göFõiGk"˙Áº.D®Bç∆ük◊rƒÆ€WÆƒ^9ó€’¨BasicOps.json  òË÷ó∏•™)aue_write   execping 16≤èaBRˇ≠√L5wúFõiGk"˙Áº.D®Bç∆ük◊rƒÆ€WÆƒ^9ó€’¨BasicOps.json  ƒ€–ò∏•™)aue_write  ≤ execping 16eh‹¨ŒªS`ù8ó˚≠≠‚≥ûHõiGk"˙Áº.D®Bç∆iGk"˙Áº.D®Bç∆   ƒ€–ò∏•™)aue_exit    execping 16–0HVÉ˛]íç:◊“¶†.‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   ƒ€–ò∏•™)aue_recvfrom    execping 165CÙ˙»-TËäáÊôIˆ≤Â¢,˙õ{,QÁº-D®Bç∆æ≤/jQW[ëjs|€WB+<unknown>  ƒ€–ò∏•™)aue_readv  ò exectmux 16˚¶æ¥Xy™œÉKiì/Œ§‹õiÍôÖ˙Áº.D®Bç∆iÍía˙Áº.D®Bç∆   ƒ€–ò∏•™)aue_close    execping 16XîrDTO∞réEw.◊q¶H‹õiÍôÖ˙Áº.D®Bç∆iÍôÖ˙Áº.D®Bç∆   ƒ€–ò∏•™)aue_exit    execping 16kdU¥†êV≤!ú)°LL®F˙õ{,QÁº-D®Bç∆Ì( ˆ~R∂ ~{Ç~Ø/dev/tty  ƒ€–ò∏•™)aue_writev  ‹ exectmux 16v§N
“WÓõ⁄l?p$-_™,˙õ{,QÁº-D®Bç∆æ≤/jQW[ëjs|€WB+<unknown>  ∂ı ô∏•™)aue_readv  å exectmux 16Sì¬8dQ$ß)¶HÉ
R¨F˙õ{,QÁº-D®Bç∆Ì( ˆ~R∂ ~{Ç~Ø/dev/tty  ∂ı ô∏•™)aue_writev  ˛ exectmux 16U≤fsUPVÑáO}‡Z>ùÆF˙õ{,QÁº-D®Bç∆Ì( ˆ~R∂ ~{Ç~Ø/dev/tty  ∂ı ô∏•™)aue_writev  " exectmux 16qëTo€ÁTd±;ak S∞,˙õ{,QÁº-D®Bç∆æ≤/jQW[ëjs|€WB+<unknown>  ∂ı ô∏•™)aue_readv  å exectmux 16@lr*-BPX®pÁòøN≤F˙õ{,QÁº-D®Bç∆Ì( ˆ~R∂ ~{Ç~Ø/dev/tty  ∂ı ô∏•™)aue_writev  – exectmux 16ä–RúY]Ü‹oîyÍ¥,˙õ{,QÁº-D®Bç∆æ≤/jQW[ëjs|€WB+<unknown>  ä˜ƒö∏•™)aue_readv  å exectmux 16ﬂŸgvl_[∂¯«p∞∂F˙õ{,QÁº-D®Bç∆Ì( ˆ~R∂ ~{Ç~Ø/dev/tty  ä˜ƒö∏•™)aue_writev  – exectmux 16˛πs–$¬Rx¥ÕÓK
„‹D∏,˙õ{,QÁº-D®Bç∆æ≤/jQW[ëjs|€WB+<unknown>  ä˜ƒö∏•™)aue_readv  å exectmux 16ìdÛí_ùÑ°jû6®≤6∫F˙õ{,QÁº-D®Bç∆Ì( ˆ~R∂ ~{Ç~Ø/dev/tty  ä˜ƒö∏•™)aue_writev  – exectmux 16ëπåM ^±!tnjÊ|º,˙õ{,QÁº-D®Bç∆æ≤/jQW[ëjs|€WB+<unknown>  äˇæõ∏•™)aue_readv  å exectmux 16w™È¥˛`X≤∫*ë~3ÁæF˙õ{,QÁº-D®Bç∆Ì( ˆ~R∂ ~{Ç~Ø/dev/tty  äˇæõ∏•™)aue_writev  – exectmux 16R'"páüV=∞çc“Î'@4¿,˙õ{,QÁº-D®Bç∆æ≤/jQW[ëjs|€WB+<unknown>  ñÜπú∏•™)aue_readv  å exectmux 16ºA#•ˇ¿_ü™ÿbÕäÑ¬F˙õ{,QÁº-D®Bç∆Ì( ˆ~R∂ ~{Ç~Ø/dev/tty  ñÜπú∏•™)aue_writev  – exectmux 16∏»[ÏsPE†FLÚ6ÔØƒ,˙õ{,QÁº-D®Bç∆æ≤/jQW[ëjs|€WB+<unknown>  êò≠û∏•™)aue_readv  å exectmux 16Ê–ÎÇ™◊U%ï®«]∑./7∆F˙õ{,QÁº-D®Bç∆Ì( ˆ~R∂ ~{Ç~Ø/dev/tty  êò≠û∏•™)aue_writev  – exectmux 16Pπùu„≤òoc ü"SI∂